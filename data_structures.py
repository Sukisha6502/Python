# -*- coding: utf-8 -*-
"""Data_Structures.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F_4cw18tnbfE0arqQBXQR4AZObtLeyOL

**DATA STRUCTURES**

**1.** **LIST**

* Collection of homogeneous and hetrogeneous elements.
* Represented by square brakets[].
* It allows duplicates.
* It is ordered and mutable
"""

l=[23,345,12,'Suki',67.55,True,43]
l

"""append() - Add the value at the end."""

l.append(78)
l

"""type() - Show the data type."""

print(type(l))

"""insert() - Insert the element at the specific index"""

l.insert(5,65)
l

"""Index - We can add the element using index"""

l[3]=48
l

"""remove() - Remove the particular element"""

l.remove(65)
l

"""pop() - Removes the last element"""

l.pop()
l

"""pop(index) - Remove the element using index"""

l.pop(2)
l

"""Replication"""

l*5

"""count() - Counts the element"""

l.count(48)

"""copy() - Copy the list"""

a=l.copy()
a

"""extend() - Add another list at the end of the list"""

b=[245,56.68,14,29]
a.extend(b)
a

"""reverse() - Reverse the list"""

a.reverse()
a

"""clear - [ ]empty the list"""

a.clear

"""del - delete the list"""

del a

"""sort() - Sorting the list in ascending or decending order"""

a=[13,466,23,12,77,35,65]
a.sort()
a

a.sort (reverse=True)
a

a.sort(reverse=False)
a

"""len() - Find the length of the list"""

len(a)

"""Slicing - [start:stop-1:step value]"""

print(a[0])
print(a[2:6])
print(a[:7:3])
print(a[::-1])
print(a[-1])

"""min(),max() - Find the minimum and the maximum element in the list"""

min(a)

max(a)

"""**2. TUPLE**

* Collection of homogeneous and hetrogeneous elements.
* Represented by parenthesis ().
* It allows duplicate.
* It is ordered and immutable.
"""

t=(25,13,63,58,'Suki',True,35.68)
t

"""Concatenation - Join two tuples"""

a=(1,2,3,4,5)
b=(6,7,8,9,10)
c=a+b
c

"""type() - Find the data type"""

print(type(t))

"""len() - Find the length of the tuple"""

len(t)

"""Replication"""

t*4

"""min(), max() - Find the minimum and the maximum element in the tuple"""

min(c)

max(c)

"""sorted() - Sorting the elements in the tuple"""

a=(34,57,12,4,68,134,2)
b=sorted(a)
b

"""Tuple packing and unpacking"""

a=(1,2,3)
x,y,z=a

x

y

z

"""Slicing - [start:stop-1:step value]"""

print(c[0])
print(c[2:6])
print(c[:7:3])
print(c[::-1])
print(c[-1])

"""**3. SET**

* Collection of homogeneous and hetrogeneous elements.
* Represented by curly braces {}.
* It doesnot allows duplicates.
* It is unordered and immutable.
"""

a={10,20,25,45,60,56,70,80}
b={24,10,20,45,60,80}
print(a)
print(b)

"""type() - Find the datatype"""

print(type(a))

"""union()"""

a.union(b)

b.union(a)

"""Intersection"""

a.intersection(b)

b.intersection(a)

"""Difference"""

a.difference(b)

b.difference(a)

"""Issubset"""

a.issubset(b)

b.issubset(a)

"""update"""

a.update(b)
a

b.update(a)
b

"""pop()"""

a.pop()

"""remove()"""

a.remove(60)
a

"""in and not in"""

10 in a

45 not in a

"""clear()"""

a.clear()

"""del"""

del a

"""**4. DICTIONARY**

* Collection of homogeneous and hetrogeneous elements.
* Key value pairs.
* Represented by curly braces.
* It doesnot allows duplicates.
* It is ordered and mutable
"""

d={"Name":"Suki","Age":21,"Dept":"CSE"}
d

"""type"""

print(type(d))

"""values() - retrive values only"""

d.values()

"""keys() - retrive keys only"""

d.keys()

"""items"""

d.items()

"""len()"""

len(d)

"""update"""

d["Address"]="Kalanthapanai"
d

"""copy()"""

a=d.copy()
a

"""popitem()"""

d.popitem()

"""clear()"""

d.clear()

"""del"""

del d